% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cmd-bcftools.R
\name{bcftools}
\alias{bcftools}
\title{BCFtools is a program for variant calling and manipulating files
in the Variant Call Format (VCF) and its binary counterpart BCF.
All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.}
\usage{
bcftools(subcmd = NULL, ..., bcftools = NULL)
}
\arguments{
\item{subcmd}{Sub-Command of bcftools. Details see: \code{cmd_help(bcftools())}.}

\item{...}{<\link[rlang:dyn-dots]{dynamic dots}> Additional arguments passed to \code{bcftools} command. Empty arguments are automatically trimmed. If a single argument, such as a file path, contains spaces, it must be quoted, for example using \code{\link[=shQuote]{shQuote()}}. Details see: \code{cmd_help(bcftools())}.}

\item{bcftools}{A string of path to \code{bcftools} command.}
}
\value{
A \code{command} object.
}
\description{
BCFtools is a program for variant calling and manipulating files
in the Variant Call Format (VCF) and its binary counterpart BCF.
All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.
}
\seealso{
\itemize{
\item \url{https://samtools.github.io/bcftools/}
\item \code{\link[=cmd_wd]{cmd_wd()}}/\code{\link[=cmd_envvar]{cmd_envvar()}}/\code{\link[=cmd_envpath]{cmd_envpath()}}/\code{\link[=cmd_condaenv]{cmd_condaenv()}}
\item \code{\link[=cmd_on_start]{cmd_on_start()}}/\code{\link[=cmd_on_exit]{cmd_on_exit()}}
\item \code{\link[=cmd_on_succeed]{cmd_on_succeed()}}/\code{\link[=cmd_on_fail]{cmd_on_fail()}}
\item \code{\link[=cmd_parallel]{cmd_parallel()}}
}

Other \code{commands}:
\code{\link{allele_counter}()},
\code{\link{cellranger}()},
\code{\link{conda}()},
\code{\link{fastp}()},
\code{\link{fastq_pair}()},
\code{\link{gistic2}()},
\code{\link{kraken2}()},
\code{\link{kraken_tools}()},
\code{\link{perl}()},
\code{\link{pyscenic}()},
\code{\link{python}()},
\code{\link{samtools}()},
\code{\link{seqkit}()},
\code{\link{snpEff}()},
\code{\link{trust4}()}
}
\concept{command}
